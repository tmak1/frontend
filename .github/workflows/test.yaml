name: Greeting on variable day

on:
  workflow_dispatch:
    inputs:
      enviroment:
        description: environment
        type: environment
        default: qa

env:
  DAY_OF_WEEK: Monday
  env_var: ${{ github.event.inputs.enviroment }}

jobs:
  greeting_job:
    runs-on: ubuntu-latest
    env:
      Greeting: Hello
    steps:
      - name: "Say Hello Mona it's Monday"
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!  + ${{ env.DAY_OF_WEEK }} + ${{ github.event.inputs.enviroment }} + || + ${{ env.env_var }}"
        env:
          First_Name: Mona

  display-variables:
    name: ${{ vars.JOB_NAME }}
    if: ${{ vars.USE_VARIABLES == 'true' }}
    runs-on: ${{ vars.RUNNER }}
    # environment: ${{ env.env_var }}  # this wont work we cant put env.prop as the value of the environment key
    environment: ${{ github.event.inputs.enviroment }}
    steps:
      - name: Use variables
        run: |
          echo "repository variable : $REPOSITORY_VAR"
          echo "organization variable : $ORGANIZATION_VAR"
          echo "overridden variable : $OVERRIDE_VAR"
          echo "variable from shell environment : $env_var"
        env:
          REPOSITORY_VAR: ${{ vars.REPOSITORY_VAR }}
          ORGANIZATION_VAR: ${{ vars.ORGANIZATION_VAR }}
          OVERRIDE_VAR: ${{ vars.OVERRIDE_VAR }}

      - name: ${{ vars.HELLO_WORLD_STEP }}
        if: ${{ vars.HELLO_WORLD_ENABLED == 'true' }}
        uses: actions/hello-world-javascript-action@main
        with:
          who-to-greet: ${{ vars.GREET_NAME }}

  if-Windows-else:
    runs-on: macos-latest
    steps:
      - name: condition 1
        if: runner.os == 'Windows'
        run: echo "The operating system on the runner is $env:RUNNER_OS."
      - name: condition 2
        if: runner.os != 'Windows'
        run: echo "The operating system on the runner is not Windows, it's $RUNNER_OS."
### **Key Differences:**

# env is for single workflow
# vars are confirataion variables set in github settings and accessible by all workflows
# environment is used to cage a job to only the config variables set inside a specified environment

# | Feature        | `vars`                | `env`                          | `environment`              |
# |---------------|----------------------|-------------------------------|---------------------------|
# | Scope         | Repository-wide       | Workflow, Job, or Step        | Environment-specific      |
# | Where to Define | Repository Settings  | Workflow YAML                  | Repository Settings (Environments) |
# | Can be Dynamic? | ❌ No                 | ✅ Yes                        | ❌ No                       |
# | Secure Storage? | ❌ No (not for secrets) | ❌ No (use `secrets` for sensitive data) | ✅ Yes (with secrets) |
